server.port=10017
spring.application.name=config-client
eureka.instance.hostname=localhost
#实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true
eureka.client.register-with-eureka=true
#此客户端是否获取eureka服务器注册表上的注册信息，默认为true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://localhost:10011/eureka/

#分布式配置客户端配置.远程git库的配置文件，必须是以"客户端服务名+${profile}dev/test/prod"来命名
#也就是说，配置文件名称=客户端服务名+${profile}
spring.cloud.config.profile=prod
#指明远程仓库的分支
spring.cloud.config.label=master
#这里注册到了eureka，用以下两行配置来声明config-server
#表示开启通过服务名来访问config-server
spring.cloud.config.discovery.enabled=true
#表示注册中心config-server的服务名
spring.cloud.config.discovery.service-id=config-server
#若没有在eureka注册，则用以下一行配置来声明config-server
#spring.cloud.config.url=http://localhost:10016/

#actuator手动刷新
#1.pom文件中引入actuator的jar
#2.在引用配置文件的类上加注解“@RefreshScope”，表示当拉取新的配置以后，该注解所在的类随之刷新。若不加，在刷新配置后，该类引用的配置仍然不变
#3.配置如下信息，然后访问：http://localhost:10018/actuator/refresh即可刷新配置
#actuator端口 
management.server.port=10018
#修改访问路径  2.0之前默认是/   2.0默认是 /actuator  可以通过这个属性值修改  
management.endpoints.web.base-path=/actuator
#开放所有页面节点  默认只开启了health、info两个节点
management.endpoints.web.exposure.include=*
#显示健康具体信息  默认不会显示详细信息  
management.endpoint.health.show-details=always

